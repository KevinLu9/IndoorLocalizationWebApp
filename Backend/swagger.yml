openapi: 3.0.0
info:
  title: "KEV API"
  description: "An API made by KEV"
  version: "1.0.0"

servers:
  [url: "/api"]

components:
  schemas:
    Devices:
      type: "object"
      required: ["id"]
      properties:
        id:
          type: "string"
        name:
          type: "string"
        txPower:
          type: "integer"
    Beacons:
      type: "object"
      required: ["id"]
      properties:
        id:
          type: "string"
        name:
          type: "string"
        txPower:
          type: "integer"
        x:
          type: "number"
        y:
          type: "number"
    Locations:
      type: "object"
      required: ["id"]
      properties:
        id:
          type: "string"
        x:
          type: "number"
        y:
          type: "number"
        rssi:
          type: "number"
    LocationSearch:
      type: "object"
      required: ["id", "datetime_search"]
      properties:
        id:
          type: "string"
        datetime_search:
          type: "string"
        


paths:
  /location:
    get:
      operationId: "location.read"
      tags: ["Location"]
      summary: "Read the list of device locations"
      requestBody:
        description: "Search device locations by datetime 'dd/mm/yyyy HH:MM'"
        required: True
        content:
          application/json:
            schema:
              x-body-name: "locationsearch"
              $ref: "#/components/schemas/LocationSearch"
              
      responses:
        "200":
          description: "Sucessfully read device location"
    post:
      operationId: "location.create"
      tags: ["Location"]
      summary: "Log a new device location"
      requestBody:
        description: "Log a new device location"
        required: True
        content:
          application/json:
            schema:
              x-body-name: "location"
              $ref: "#/components/schemas/Locations"
      responses:
        "200":
          description: "Sucessfully logged a device location"
  /device:
    get:
      operationId: "device.read"
      tags: ["Device"]
      summary: "Read the list of devices"
      responses:
        "200":
          description: "Successfully read devices list"
    post:
      operationId: "device.create"
      tags: ["Device"]
      summary: "Create a new device"
      requestBody:
        description: "Device to create"
        required: True
        content:
          application/json:
            schema:
              x-body-name: "device"
              $ref: "#/components/schemas/Devices"
      responses:
        "201":
          description: "Successfully created a new Device"
    
  /beacon:
    get:
      operationId: "beacon.read"
      tags: ["Beacon"]
      summary: "Read the list of beacons"
      responses:
        "200":
          description: "Successfully read beacons list"
    post:
      operationId: "beacon.create"
      tags: ["Beacon"]
      summary: "Create a new Beacon"
      requestBody:
        description: "Beacon to create"
        required: True
        content:
          application/json:
            schema:
              x-body-name: "beacon"
              $ref: "#/components/schemas/Beacons"
      responses:
        "201":
          description: "Successfully created a new Beacon"
    patch:
      operationId: "beacon.update"
      tags: ["Beacon"]
      summary: "Update a beacon's x, y location"
      requestBody:
        description: "Beacon to update"
        required: True
        content:
          application/json:
            schema:
              x-body-name: "beacon"
              $ref: "#/components/schemas/Locations"
      responses:
        "204":
          description: "Successfully updated a beacon's location"
      
